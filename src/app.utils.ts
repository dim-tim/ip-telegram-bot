import { InfoEntity } from './entity/info.entity';

export const showListIps = (ips) =>
  `${ips
    .map((item) => {
      const msg = item.ip + '\n';
      return msg;
    })
    .join('')}`;
export const showList = (ips) =>
  `${ips
    .map((item) => {
      let msg = 'üö© ' + item.ip + '\n\n';
      item.info?.map((inf) => {
        let fraudMsg = 'üü¢ <b>–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫</b>';
        if (inf.fraud_score >= 85) {
          fraudMsg = '‚õî <b>–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫</b>';
        } else if (inf.fraud_score >= 45 && inf.fraud_score < 85) {
          fraudMsg = '‚ö† <b>–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π</b>';
        }

        let proxyMsg = 'üü¢ <b>Not Detected</b>';
        if (inf.proxy || inf.vpn) {
          proxyMsg = '‚ö† <b>Proxy/VPN Detected</b>';
        }

        msg =
          msg +
          'üìÖ ' +
          inf.created_at.toLocaleString() +
          '\n' +
          '–°—Ç–∞—Ç—É—Å: ' +
          fraudMsg +
          '\n' +
          'Fraud Score: ' +
          '<b>' +
          inf.fraud_score +
          '</b>' +
          '\n' +
          'Proxy/VPN: ' +
          proxyMsg +
          '\n' +
          '–ß–∞—Å—Ç–æ—Ç–∞ –∏—Å–ø-–∏—è: ' +
          '<b>' +
          item.info.length +
          '</b>' +
          '\n' +
          'üëß ' +
          '@' +
          inf.username +
          '\n' +
          'üåê ' +
          inf.country_code +
          ', ' +
          inf.city +
          '\n' +
          'üìå lat: ' +
          inf.latitude +
          ', lon: ' +
          inf.longitude +
          '\n\n';
      });
      return msg;
    })
    .join('')}`;

export const showLastItem = (address) => {
  {
    if (address.info.length === 0) {
      return (
        'üö© ' +
        address.ip +
        '\n' +
        '–î–∞—Ç–∞ –∑–∞–Ω–µ—Å–µ–Ω–∏—è ip –≤ –±–∞–∑—É: ' +
        address.created_at.toLocaleString() +
        '\n' +
        '–î–æ–ø –∏–Ω—Ñ—ã –ø–æ –∞–π–ø–∏ –≤ –±–∞–∑–µ –Ω–µ—Ç—É'
      );
    } else {
      const lastInfo: InfoEntity = address.info[address.info.length - 1];

      let fraudMsg = 'üü¢ <b>–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫</b>';
      if (lastInfo.fraud_score >= 85) {
        fraudMsg = '‚õî <b>–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫</b>';
      } else if (lastInfo.fraud_score >= 45 && lastInfo.fraud_score < 85) {
        fraudMsg = '‚ö† <b>–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–π</b>';
      }

      let proxyMsg = 'üü¢ <b>Not Detected</b>';
      if (lastInfo.proxy || lastInfo.vpn) {
        proxyMsg = '‚ö† <b>Proxy/VPN Detected</b>';
      }

      let msg = 'üö© ' + address.ip + '\n';
      msg =
        msg +
        'üìÖ ' +
        lastInfo.created_at.toLocaleString() +
        '\n' +
        '–°—Ç–∞—Ç—É—Å: ' +
        fraudMsg +
        '\n' +
        'Fraud Score: ' +
        '<b>' +
        lastInfo.fraud_score +
        '</b>' +
        '\n' +
        'Proxy/VPN: ' +
        proxyMsg +
        '\n' +
        '–ß–∞—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: ' +
        '<b>' +
        address.info.length +
        '</b>' +
        '\n' +
        'üëß ' +
        '@' +
        lastInfo.username +
        '\n' +
        'üåê ' +
        lastInfo.country_code +
        ', ' +
        lastInfo.city +
        '\n' +
        'üìå lat: ' +
        lastInfo.latitude +
        ', lon: ' +
        lastInfo.longitude +
        '\n\n';
      return msg;
    }
  }
};
